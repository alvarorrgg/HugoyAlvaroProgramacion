Ejercicio 1:
	linea 1: mensaje que le dice a la consola que es un script.
	linea 3: es un echo que muestra por pantalla "Compilando..." para que se sepa que el programa funcina.
	linea 4: Compilo p1_e1.c con el flag -Wall que sirve para mostrar errores por pantalla. Esta linea forma el archivo p1_e1.o
	linea 5: Compilo vertex.c con el flag -Wall que sirve para mostrar errores por pantalla. Esta linea forma el archivo vertex.o
	linea 6: Enlazo tanto p1_e1.o como vertex.o en un archivo en este caso p1_e1 que será nuestro ejecutable.
	
Ejercicio 2: 
	a)La función vertex_cmp_ptr devolverá 1 (true) en el caso a ya tanto v como p son punteros Vertex y como se igualan con la instrucción v = (Vertex*) p entonces ambos punteros valen lo mismo.
	b)La función vertex_cmp_ptr devolverá 1 también en este caso.
	
Ejercicio 3:
	a) La implementación en si es correcta, el problema es que en la linea donde se define el puntero Vertex, se llama a la estructura Vertex y esta estructura es una estructura que aunque tiene su cabecera en vertex.h que es publica, tiene su definición en vertex.c de manera privada por lo cual a la hora de reservar memoria para el puntero Vertex, el programa sabe que la estructura existe pero no que tiene dentro por lo cual no es correcto.
	b) Sin embargo, en este caso, aunque es muy parecido al anterior, se está reservando la memoria dentro de Vertex.c y es en Vertex.c donde se encuentra la estructura de datos por lo cual el programa si sabe cuanta memoria tiene que reservar y por lo cual es correcta la implementación.
	c)Este caso también es correcto ya que en el vertex.h esta la cabecera de la función que esta correcta, en el vertex.c esta la función que también esta correctamente implementadada y por ultimo no se produce ningun error en el main al llamar a la funcion asi que esta todo correcto.

Ejercicio 4:
	Hemos necesitado crear una función privada para el correcto funcionamiento del programa. En este caso era la funcion graph_connections_update que hace lo que su nombre indica y actualiza las conexiones de los ids. Es decir a la hora de añadir un nuevo vertice, se asegura de inizializar las conexiones del resto de vertices con este vertice para así evitar problemas a la hora de utilizar otras funciones.
